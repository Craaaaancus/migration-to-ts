(()=>{"use strict";var r={669:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(15),o=e.n(t),i=e(645),A=e.n(i)()(o());A.push([r.id,".news {\r\n  width: 60%;\r\n}\r\n\r\n.news__item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1.5vw auto;\r\n  margin-bottom: 1.3%;\r\n  background: #fff;\r\n  color: #333;\r\n  line-height: 1.4;\r\n  font-family: Arial, sans-serif;\r\n  border-radius: 0.3vw;\r\n  overflow: hidden;\r\n}\r\n\r\n.news__item:hover .news__meta-photo {\r\n  transform: scale(1.3) rotate(3deg);\r\n}\r\n\r\n.news__item .news__meta {\r\n  position: relative;\r\n  height: 30vh;\r\n}\r\n\r\n.news__item .news__meta-photo {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.news__item .news__meta-details,\r\n.news__item .news__meta-details ul {\r\n  margin: auto;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n.news__item .news__meta-details {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -120%;\r\n  margin: auto;\r\n  transition: left 0.2s;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  color: #fff;\r\n  padding: 1vw;\r\n  width: 100%;\r\n  font-size: 3vw;\r\n  text-align: center;\r\n}\r\n\r\n.news__item .news__description {\r\n  padding: 1.2vw;\r\n  background: #fff;\r\n  position: relative;\r\n  font-size: 2.25vw;\r\n  z-index: 1;\r\n}\r\n\r\n.news__item .news__description h2 {\r\n  line-height: 1;\r\n  margin: 0;\r\n  font-size: 3vw;\r\n}\r\n\r\n.news__item .news__description h3 {\r\n  font-size: 1.5vw;\r\n  font-weight: 300;\r\n  text-transform: uppercase;\r\n  color: #a2a2a2;\r\n  margin-top: 0.5vh;\r\n  margin-bottom: 0.5vh;\r\n}\r\n\r\n.news__item .news__description-content {\r\n  text-align: justify;\r\n}\r\n\r\n.news__item .news__description .news__read-more {\r\n  text-align: center;\r\n  font-size: 3vw;\r\n}\r\n\r\n.news__item .news__description .news__read-more a {\r\n  color: #5ad67d;\r\n  display: inline-block;\r\n  position: relative;\r\n  text-decoration: none;\r\n  font-weight: 800;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:after {\r\n  content: '→';\r\n  margin-left: -1vw;\r\n  opacity: 0;\r\n  vertical-align: middle;\r\n  transition: margin 0.3s, opacity 0.3s;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:hover:after {\r\n  margin-left: 0.5vw;\r\n  opacity: 1;\r\n}\r\n\r\n.news__item p {\r\n  margin: 1vw 0 0;\r\n}\r\n\r\n.news__item p:first-of-type {\r\n  margin-top: 1.2vw;\r\n  position: relative;\r\n}\r\n\r\n.news__item p:first-of-type:before {\r\n  content: '';\r\n  position: absolute;\r\n  height: 0.3vw;\r\n  background: #5ad67d;\r\n  width: 3.5vw;\r\n  top: -0.5vh;\r\n  border-radius: 0.2vh;\r\n}\r\n\r\n.news__item:hover .news__meta-details {\r\n  left: 0%;\r\n}\r\n\r\n@media (min-width: 668px) {\r\n  .news__item {\r\n    flex-direction: row;\r\n    max-width: 50vw;\r\n  }\r\n\r\n  .news__item .news__meta {\r\n    flex-basis: 40%;\r\n    height: auto;\r\n  }\r\n\r\n  .news__item .news__description {\r\n    font-size: 1.25vw;\r\n    flex-basis: 60%;\r\n  }\r\n\r\n  .news__item .news__description h2{\r\n    font-size: 1.8vw;\r\n  }\r\n\r\n  .news__item .news__description h3 {\r\n    font-size: 1vw;\r\n    margin-top: 0.75vh;\r\n  }\r\n\r\n  .news__item .news__description:before {\r\n    -webkit-transform: skewX(-3deg);\r\n    transform: skewX(-3deg);\r\n    content: '';\r\n    background: #fff;\r\n    width: 3vw;\r\n    position: absolute;\r\n    left: -1vw;\r\n    top: 0;\r\n    bottom: -0.5vw;\r\n    z-index: -1;\r\n  }\r\n\r\n  .news__item.alt {\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .news__item.alt .news__description:before {\r\n    left: inherit;\r\n    right: -1vw;\r\n    -webkit-transform: skew(3deg);\r\n    transform: skew(3deg);\r\n  }\r\n\r\n  .news__item.alt .news__meta-details {\r\n    padding-left: 2.5vw;\r\n  }\r\n\r\n  .news__item .news__meta-details {\r\n    text-align: initial;\r\n    font-size: 1vw;\r\n  }\r\n\r\n  .news__item .news__description .news__read-more {\r\n    text-align: right;\r\n    font-size: 1.5vw;\r\n  }\r\n\r\n  .news__item p:first-of-type::before{\r\n    top: -1.5vh;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n  .news {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n","",{version:3,sources:["webpack://./src/components/view/news/news.css"],names:[],mappings:"AAAA;EACE,UAAU;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,kBAAkB;EAClB,mBAAmB;EACnB,gBAAgB;EAChB,WAAW;EACX,gBAAgB;EAChB,8BAA8B;EAC9B,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;EACE,kCAAkC;AACpC;;AAEA;EACE,kBAAkB;EAClB,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,QAAQ;EACR,SAAS;EACT,OAAO;EACP,sBAAsB;EACtB,2BAA2B;EAC3B,0BAA0B;AAC5B;;AAEA;;EAEE,YAAY;EACZ,UAAU;EACV,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,MAAM;EACN,SAAS;EACT,WAAW;EACX,YAAY;EACZ,qBAAqB;EACrB,8BAA8B;EAC9B,WAAW;EACX,YAAY;EACZ,WAAW;EACX,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,gBAAgB;EAChB,kBAAkB;EAClB,iBAAiB;EACjB,UAAU;AACZ;;AAEA;EACE,cAAc;EACd,SAAS;EACT,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,yBAAyB;EACzB,cAAc;EACd,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,cAAc;EACd,qBAAqB;EACrB,kBAAkB;EAClB,qBAAqB;EACrB,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,iBAAiB;EACjB,UAAU;EACV,sBAAsB;EACtB,qCAAqC;AACvC;;AAEA;EACE,kBAAkB;EAClB,UAAU;AACZ;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;EACjB,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,kBAAkB;EAClB,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,oBAAoB;AACtB;;AAEA;EACE,QAAQ;AACV;;AAEA;EACE;IACE,mBAAmB;IACnB,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,YAAY;EACd;;EAEA;IACE,iBAAiB;IACjB,eAAe;EACjB;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,cAAc;IACd,kBAAkB;EACpB;;EAEA;IACE,+BAA+B;IAC/B,uBAAuB;IACvB,WAAW;IACX,gBAAgB;IAChB,UAAU;IACV,kBAAkB;IAClB,UAAU;IACV,MAAM;IACN,cAAc;IACd,WAAW;EACb;;EAEA;IACE,2BAA2B;EAC7B;;EAEA;IACE,aAAa;IACb,WAAW;IACX,6BAA6B;IAC7B,qBAAqB;EACvB;;EAEA;IACE,mBAAmB;EACrB;;EAEA;IACE,mBAAmB;IACnB,cAAc;EAChB;;EAEA;IACE,iBAAiB;IACjB,gBAAgB;EAClB;;EAEA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,WAAW;EACb;AACF",sourcesContent:[".news {\r\n  width: 60%;\r\n}\r\n\r\n.news__item {\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin: 1.5vw auto;\r\n  margin-bottom: 1.3%;\r\n  background: #fff;\r\n  color: #333;\r\n  line-height: 1.4;\r\n  font-family: Arial, sans-serif;\r\n  border-radius: 0.3vw;\r\n  overflow: hidden;\r\n}\r\n\r\n.news__item:hover .news__meta-photo {\r\n  transform: scale(1.3) rotate(3deg);\r\n}\r\n\r\n.news__item .news__meta {\r\n  position: relative;\r\n  height: 30vh;\r\n}\r\n\r\n.news__item .news__meta-photo {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  background-size: cover;\r\n  background-position: center;\r\n  transition: transform 0.2s;\r\n}\r\n\r\n.news__item .news__meta-details,\r\n.news__item .news__meta-details ul {\r\n  margin: auto;\r\n  padding: 0;\r\n  list-style: none;\r\n}\r\n\r\n.news__item .news__meta-details {\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: -120%;\r\n  margin: auto;\r\n  transition: left 0.2s;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  color: #fff;\r\n  padding: 1vw;\r\n  width: 100%;\r\n  font-size: 3vw;\r\n  text-align: center;\r\n}\r\n\r\n.news__item .news__description {\r\n  padding: 1.2vw;\r\n  background: #fff;\r\n  position: relative;\r\n  font-size: 2.25vw;\r\n  z-index: 1;\r\n}\r\n\r\n.news__item .news__description h2 {\r\n  line-height: 1;\r\n  margin: 0;\r\n  font-size: 3vw;\r\n}\r\n\r\n.news__item .news__description h3 {\r\n  font-size: 1.5vw;\r\n  font-weight: 300;\r\n  text-transform: uppercase;\r\n  color: #a2a2a2;\r\n  margin-top: 0.5vh;\r\n  margin-bottom: 0.5vh;\r\n}\r\n\r\n.news__item .news__description-content {\r\n  text-align: justify;\r\n}\r\n\r\n.news__item .news__description .news__read-more {\r\n  text-align: center;\r\n  font-size: 3vw;\r\n}\r\n\r\n.news__item .news__description .news__read-more a {\r\n  color: #5ad67d;\r\n  display: inline-block;\r\n  position: relative;\r\n  text-decoration: none;\r\n  font-weight: 800;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:after {\r\n  content: '→';\r\n  margin-left: -1vw;\r\n  opacity: 0;\r\n  vertical-align: middle;\r\n  transition: margin 0.3s, opacity 0.3s;\r\n}\r\n\r\n.news__item .news__description .news__read-more a:hover:after {\r\n  margin-left: 0.5vw;\r\n  opacity: 1;\r\n}\r\n\r\n.news__item p {\r\n  margin: 1vw 0 0;\r\n}\r\n\r\n.news__item p:first-of-type {\r\n  margin-top: 1.2vw;\r\n  position: relative;\r\n}\r\n\r\n.news__item p:first-of-type:before {\r\n  content: '';\r\n  position: absolute;\r\n  height: 0.3vw;\r\n  background: #5ad67d;\r\n  width: 3.5vw;\r\n  top: -0.5vh;\r\n  border-radius: 0.2vh;\r\n}\r\n\r\n.news__item:hover .news__meta-details {\r\n  left: 0%;\r\n}\r\n\r\n@media (min-width: 668px) {\r\n  .news__item {\r\n    flex-direction: row;\r\n    max-width: 50vw;\r\n  }\r\n\r\n  .news__item .news__meta {\r\n    flex-basis: 40%;\r\n    height: auto;\r\n  }\r\n\r\n  .news__item .news__description {\r\n    font-size: 1.25vw;\r\n    flex-basis: 60%;\r\n  }\r\n\r\n  .news__item .news__description h2{\r\n    font-size: 1.8vw;\r\n  }\r\n\r\n  .news__item .news__description h3 {\r\n    font-size: 1vw;\r\n    margin-top: 0.75vh;\r\n  }\r\n\r\n  .news__item .news__description:before {\r\n    -webkit-transform: skewX(-3deg);\r\n    transform: skewX(-3deg);\r\n    content: '';\r\n    background: #fff;\r\n    width: 3vw;\r\n    position: absolute;\r\n    left: -1vw;\r\n    top: 0;\r\n    bottom: -0.5vw;\r\n    z-index: -1;\r\n  }\r\n\r\n  .news__item.alt {\r\n    flex-direction: row-reverse;\r\n  }\r\n\r\n  .news__item.alt .news__description:before {\r\n    left: inherit;\r\n    right: -1vw;\r\n    -webkit-transform: skew(3deg);\r\n    transform: skew(3deg);\r\n  }\r\n\r\n  .news__item.alt .news__meta-details {\r\n    padding-left: 2.5vw;\r\n  }\r\n\r\n  .news__item .news__meta-details {\r\n    text-align: initial;\r\n    font-size: 1vw;\r\n  }\r\n\r\n  .news__item .news__description .news__read-more {\r\n    text-align: right;\r\n    font-size: 1.5vw;\r\n  }\r\n\r\n  .news__item p:first-of-type::before{\r\n    top: -1.5vh;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n  .news {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n"],sourceRoot:""}]);const s=A},501:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(15),o=e.n(t),i=e(645),A=e.n(i)()(o());A.push([r.id,".sources {\r\n  width: 40%;\r\n  height: 80vh;\r\n  font: 300 1vw 'Fira Sans', sans-serif;\r\n  position: sticky;\r\n  top: 1vh;\r\n}\r\n\r\n.source__title{\r\n  font-size: 4vw;\r\n  text-align: center;\r\n  margin-bottom: 1vh;\r\n  color: #70d6ff;\r\n}\r\n\r\n.source__list {\r\n  display: grid;\r\n  height: 90%;\r\n  grid-template-columns: 1fr 1fr;\r\n  align-items: center;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  text-align: center;\r\n}\r\n\r\n.source__item {\r\n  box-sizing: border-box;\r\n  background: none;\r\n  border: 0.2vw solid #30c5ff;\r\n  font: inherit;\r\n  line-height: 1;\r\n  margin: 0.5vw;\r\n  padding: 1.1vw 1.4vw;\r\n  color: #70d6ff;\r\n  transition: 0.25s;\r\n  cursor: pointer;\r\n}\r\n\r\n.source__item:hover,\r\n.source__item:focus {\r\n  border-color: #3fcc59;\r\n  color: #69db7e;\r\n  box-shadow: 0 0.5vw 0.5vw -0.4vw #3fcc59;\r\n  transform: translateY(-0.25vw);\r\n}\r\n\r\n.source__item-name {\r\n  font-weight: 400;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\n@media screen and (min-width: 768px) and (max-width:1279px) {\r\n  .source__list {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n  main {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  .sources {\r\n    width: 100%;\r\n    margin-bottom: 5vh;\r\n    position: static;\r\n    height: 25vh;\r\n  }\r\n  .source__list {\r\n    grid-template-columns: 1fr;\r\n    font-size: 3vw;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/components/view/sources/sources.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,YAAY;EACZ,qCAAqC;EACrC,gBAAgB;EAChB,QAAQ;AACV;;AAEA;EACE,cAAc;EACd,kBAAkB;EAClB,kBAAkB;EAClB,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,WAAW;EACX,8BAA8B;EAC9B,mBAAmB;EACnB,gBAAgB;EAChB,kBAAkB;EAClB,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;EACtB,gBAAgB;EAChB,2BAA2B;EAC3B,aAAa;EACb,cAAc;EACd,aAAa;EACb,oBAAoB;EACpB,cAAc;EACd,iBAAiB;EACjB,eAAe;AACjB;;AAEA;;EAEE,qBAAqB;EACrB,cAAc;EACd,wCAAwC;EACxC,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,mBAAmB;AACrB;;;AAGA;EACE;IACE,0BAA0B;EAC5B;AACF;;AAEA;EACE;IACE,8BAA8B;EAChC;;EAEA;IACE,WAAW;IACX,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;EACd;EACA;IACE,0BAA0B;IAC1B,cAAc;EAChB;AACF",sourcesContent:[".sources {\r\n  width: 40%;\r\n  height: 80vh;\r\n  font: 300 1vw 'Fira Sans', sans-serif;\r\n  position: sticky;\r\n  top: 1vh;\r\n}\r\n\r\n.source__title{\r\n  font-size: 4vw;\r\n  text-align: center;\r\n  margin-bottom: 1vh;\r\n  color: #70d6ff;\r\n}\r\n\r\n.source__list {\r\n  display: grid;\r\n  height: 90%;\r\n  grid-template-columns: 1fr 1fr;\r\n  align-items: center;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  text-align: center;\r\n}\r\n\r\n.source__item {\r\n  box-sizing: border-box;\r\n  background: none;\r\n  border: 0.2vw solid #30c5ff;\r\n  font: inherit;\r\n  line-height: 1;\r\n  margin: 0.5vw;\r\n  padding: 1.1vw 1.4vw;\r\n  color: #70d6ff;\r\n  transition: 0.25s;\r\n  cursor: pointer;\r\n}\r\n\r\n.source__item:hover,\r\n.source__item:focus {\r\n  border-color: #3fcc59;\r\n  color: #69db7e;\r\n  box-shadow: 0 0.5vw 0.5vw -0.4vw #3fcc59;\r\n  transform: translateY(-0.25vw);\r\n}\r\n\r\n.source__item-name {\r\n  font-weight: 400;\r\n  white-space: nowrap;\r\n}\r\n\r\n\r\n@media screen and (min-width: 768px) and (max-width:1279px) {\r\n  .source__list {\r\n    grid-template-columns: 1fr;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px) {\r\n  main {\r\n    flex-direction: column-reverse;\r\n  }\r\n\r\n  .sources {\r\n    width: 100%;\r\n    margin-bottom: 5vh;\r\n    position: static;\r\n    height: 25vh;\r\n  }\r\n  .source__list {\r\n    grid-template-columns: 1fr;\r\n    font-size: 3vw;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const s=A},767:(r,n,e)=>{e.d(n,{Z:()=>s});var t=e(15),o=e.n(t),i=e(645),A=e.n(i)()(o());A.push([r.id,'body {\r\n  color: #fff;\r\n  background: #17181c;\r\n  font-family: sans-serif;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  transition: color .3s;\r\n}\r\n\r\nh1 {\r\n  margin: 0;\r\n}\r\n\r\n.locked {\r\n  overflow: hidden;\r\n}\r\n\r\nheader {\r\n  padding: 1vw 3vw;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\nheader h1 {\r\n  font-size: 4vw;\r\n  font-weight: 800;\r\n}\r\n\r\nheader .menu {\r\n  display: none;\r\n}\r\n\r\nmain {\r\n  margin: 2vw;\r\n  display: flex;\r\n}\r\n\r\nfooter {\r\n  height: 25vh;\r\n  margin-top: 4vh;\r\n  margin-bottom: 4vh;\r\n  display: grid;\r\n  grid-template-areas: \r\n  "rss github copyright"\r\n  "rss course copyright";\r\n  grid-template-columns: 1fr 1fr 0.8fr;\r\n  text-align: center;\r\n  font-size: 1.8vw;\r\n  font-weight: 600;\r\n}\r\n\r\nfooter .rss {\r\n  max-width: 20vw;\r\n  padding: 8%;\r\n  height: auto;\r\n  margin: 0 auto;\r\n  grid-area: rss;\r\n  display: flex;\r\n  background: rgb(252, 255, 60);\r\n  border-radius: 5vw;\r\n}\r\nfooter .rss img {\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n}\r\nfooter .github{\r\n  color: #69db7e;\r\n  grid-area: github;\r\n}\r\nfooter .course {\r\n  color: #69db7e;\r\n  grid-area: course;\r\n}\r\nfooter span.year {\r\n  color: rgb(255, 252, 76);\r\n  font-size: 1.2vw;\r\n}\r\nfooter .copyright {\r\n  font-size: 1.2vw;\r\n  color: rgb(96, 84, 84);\r\n  grid-column: 3;\r\n  grid-area: copyright;\r\n  align-self: center;\r\n}\r\nfooter .github a, footer .course a {\r\n  color: #30c5ff;\r\n}\r\nfooter .github a:hover, footer .course a:hover {\r\n  color: #0c8bbd;\r\n}\r\nfooter .copyright a {\r\n  color: rgb(134, 122, 122);\r\n}\r\nfooter .copyright a:hover {\r\n  color: #30c5ff;\r\n}\r\nfooter .copyright:before {\r\n  content: \'©\';\r\n}\r\n\r\n@media screen and (min-width: 768px) and (max-width:1279px) {\r\n  footer {\r\n    grid-template-areas: \r\n    "rss github"\r\n    "rss course"\r\n    "copyright copyright";\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  footer .rss {\r\n    padding: 5%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px){\r\n  header {\r\n    height: 7vh;\r\n  }\r\n\r\n  header h1 {\r\n    font-size: 5vw;\r\n  }\r\n\r\n  #burger {\r\n    display: none;\r\n    width: 3vw;\r\n    height: 3vh;\r\n    position: relative;\r\n  }\r\n\r\n  #burger span {\r\n    background-color: #70d6ff;\r\n    position: absolute;\r\n    width: 4vw;\r\n    height: 0.25vh;\r\n    left: 0;\r\n    top: 1vh;\r\n  }\r\n\r\n  #burger::after, #burger::before{\r\n    content: \'\';\r\n    background-color: #70d6ff;\r\n    position: absolute;\r\n    width: 4vw;\r\n    height: 0.25vh;\r\n    left: 0;\r\n  }\r\n\r\n  #burger::before{\r\n    top: -0.1vh;\r\n  }\r\n\r\n  #burger::after{\r\n    bottom: 0.5vh;\r\n  }\r\n\r\n  .burger-open {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  .menu {\r\n    display: block;\r\n    z-index: 50;\r\n    position: fixed;\r\n    top: 0;\r\n    right: -110%;\r\n    width: 35vw;\r\n    height: 100%;\r\n    background: #292929;\r\n    transition: right 0.4s ease-in 0s;\r\n    overflow: auto;\r\n  }\r\n\r\n  .menu__side {\r\n    z-index: 1;\r\n    position: fixed;\r\n    left: -100%;\r\n    top: 0;\r\n    width: calc(100% - 35vw);\r\n    height: 100%;\r\n    background: rgba(41, 41, 41, 0.6);\r\n    transition: left .4s ease-in 0s;\r\n  }\r\n\r\n  .menu__list {\r\n    z-index: 90;\r\n  }\r\n\r\n  .menu__link a {\r\n    line-height: 160%;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: #CDCDCD;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .menu__link a:hover {\r\n    color: #FAFAFA;\r\n  }\r\n\r\n  .menu-open {\r\n    right: 0;\r\n  }\r\n\r\n  .menu__side-open {\r\n    left: 0;\r\n  }\r\n\r\n  .locked {\r\n    overflow: hidden;\r\n  }\r\n\r\n  footer {\r\n    height: 16vh;\r\n    grid-template-areas: \r\n    "rss github course"\r\n    "copyright copyright copyright";\r\n    grid-template-columns: 0.5fr 1fr 1fr;\r\n    grid-template-rows: 8vh 8vh;\r\n    font-size: 2.4vw;\r\n  }\r\n  footer .rss {\r\n    padding: 5%;\r\n    max-width: 100%;\r\n    border-radius: 1vw;\r\n  }\r\n  footer .github, footer .course {\r\n    align-self: center;\r\n  }\r\n  footer .copyright, footer span.year  {\r\n    font-size: 1.6vw;\r\n  }\r\n}',"",{version:3,sources:["webpack://./src/global.css"],names:[],mappings:"AAAA;EACE,WAAW;EACX,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,qBAAqB;EACrB,qBAAqB;AACvB;;AAEA;EACE,SAAS;AACX;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,aAAa;AACf;;AAEA;EACE,YAAY;EACZ,eAAe;EACf,kBAAkB;EAClB,aAAa;EACb;;wBAEsB;EACtB,oCAAoC;EACpC,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,WAAW;EACX,YAAY;EACZ,cAAc;EACd,cAAc;EACd,aAAa;EACb,6BAA6B;EAC7B,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;AACrB;AACA;EACE,cAAc;EACd,iBAAiB;AACnB;AACA;EACE,cAAc;EACd,iBAAiB;AACnB;AACA;EACE,wBAAwB;EACxB,gBAAgB;AAClB;AACA;EACE,gBAAgB;EAChB,sBAAsB;EACtB,cAAc;EACd,oBAAoB;EACpB,kBAAkB;AACpB;AACA;EACE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;EACE,yBAAyB;AAC3B;AACA;EACE,cAAc;AAChB;AACA;EACE,YAAY;AACd;;AAEA;EACE;IACE;;;yBAGqB;IACrB,8BAA8B;EAChC;EACA;IACE,WAAW;EACb;AACF;;AAEA;EACE;IACE,WAAW;EACb;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,aAAa;IACb,UAAU;IACV,WAAW;IACX,kBAAkB;EACpB;;EAEA;IACE,yBAAyB;IACzB,kBAAkB;IAClB,UAAU;IACV,cAAc;IACd,OAAO;IACP,QAAQ;EACV;;EAEA;IACE,WAAW;IACX,yBAAyB;IACzB,kBAAkB;IAClB,UAAU;IACV,cAAc;IACd,OAAO;EACT;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,wBAAwB;EAC1B;;EAEA;IACE,cAAc;IACd,WAAW;IACX,eAAe;IACf,MAAM;IACN,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,mBAAmB;IACnB,iCAAiC;IACjC,cAAc;EAChB;;EAEA;IACE,UAAU;IACV,eAAe;IACf,WAAW;IACX,MAAM;IACN,wBAAwB;IACxB,YAAY;IACZ,iCAAiC;IACjC,+BAA+B;EACjC;;EAEA;IACE,WAAW;EACb;;EAEA;IACE,iBAAiB;IACjB,kBAAkB;IAClB,gBAAgB;IAChB,cAAc;IACd,eAAe;EACjB;;EAEA;IACE,cAAc;EAChB;;EAEA;IACE,QAAQ;EACV;;EAEA;IACE,OAAO;EACT;;EAEA;IACE,gBAAgB;EAClB;;EAEA;IACE,YAAY;IACZ;;mCAE+B;IAC/B,oCAAoC;IACpC,2BAA2B;IAC3B,gBAAgB;EAClB;EACA;IACE,WAAW;IACX,eAAe;IACf,kBAAkB;EACpB;EACA;IACE,kBAAkB;EACpB;EACA;IACE,gBAAgB;EAClB;AACF",sourcesContent:['body {\r\n  color: #fff;\r\n  background: #17181c;\r\n  font-family: sans-serif;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  transition: color .3s;\r\n}\r\n\r\nh1 {\r\n  margin: 0;\r\n}\r\n\r\n.locked {\r\n  overflow: hidden;\r\n}\r\n\r\nheader {\r\n  padding: 1vw 3vw;\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\nheader h1 {\r\n  font-size: 4vw;\r\n  font-weight: 800;\r\n}\r\n\r\nheader .menu {\r\n  display: none;\r\n}\r\n\r\nmain {\r\n  margin: 2vw;\r\n  display: flex;\r\n}\r\n\r\nfooter {\r\n  height: 25vh;\r\n  margin-top: 4vh;\r\n  margin-bottom: 4vh;\r\n  display: grid;\r\n  grid-template-areas: \r\n  "rss github copyright"\r\n  "rss course copyright";\r\n  grid-template-columns: 1fr 1fr 0.8fr;\r\n  text-align: center;\r\n  font-size: 1.8vw;\r\n  font-weight: 600;\r\n}\r\n\r\nfooter .rss {\r\n  max-width: 20vw;\r\n  padding: 8%;\r\n  height: auto;\r\n  margin: 0 auto;\r\n  grid-area: rss;\r\n  display: flex;\r\n  background: rgb(252, 255, 60);\r\n  border-radius: 5vw;\r\n}\r\nfooter .rss img {\r\n  width: 100%;\r\n  height: auto;\r\n  align-items: center;\r\n}\r\nfooter .github{\r\n  color: #69db7e;\r\n  grid-area: github;\r\n}\r\nfooter .course {\r\n  color: #69db7e;\r\n  grid-area: course;\r\n}\r\nfooter span.year {\r\n  color: rgb(255, 252, 76);\r\n  font-size: 1.2vw;\r\n}\r\nfooter .copyright {\r\n  font-size: 1.2vw;\r\n  color: rgb(96, 84, 84);\r\n  grid-column: 3;\r\n  grid-area: copyright;\r\n  align-self: center;\r\n}\r\nfooter .github a, footer .course a {\r\n  color: #30c5ff;\r\n}\r\nfooter .github a:hover, footer .course a:hover {\r\n  color: #0c8bbd;\r\n}\r\nfooter .copyright a {\r\n  color: rgb(134, 122, 122);\r\n}\r\nfooter .copyright a:hover {\r\n  color: #30c5ff;\r\n}\r\nfooter .copyright:before {\r\n  content: \'©\';\r\n}\r\n\r\n@media screen and (min-width: 768px) and (max-width:1279px) {\r\n  footer {\r\n    grid-template-areas: \r\n    "rss github"\r\n    "rss course"\r\n    "copyright copyright";\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n  footer .rss {\r\n    padding: 5%;\r\n  }\r\n}\r\n\r\n@media screen and (max-width: 767px){\r\n  header {\r\n    height: 7vh;\r\n  }\r\n\r\n  header h1 {\r\n    font-size: 5vw;\r\n  }\r\n\r\n  #burger {\r\n    display: none;\r\n    width: 3vw;\r\n    height: 3vh;\r\n    position: relative;\r\n  }\r\n\r\n  #burger span {\r\n    background-color: #70d6ff;\r\n    position: absolute;\r\n    width: 4vw;\r\n    height: 0.25vh;\r\n    left: 0;\r\n    top: 1vh;\r\n  }\r\n\r\n  #burger::after, #burger::before{\r\n    content: \'\';\r\n    background-color: #70d6ff;\r\n    position: absolute;\r\n    width: 4vw;\r\n    height: 0.25vh;\r\n    left: 0;\r\n  }\r\n\r\n  #burger::before{\r\n    top: -0.1vh;\r\n  }\r\n\r\n  #burger::after{\r\n    bottom: 0.5vh;\r\n  }\r\n\r\n  .burger-open {\r\n    transform: rotate(90deg);\r\n  }\r\n\r\n  .menu {\r\n    display: block;\r\n    z-index: 50;\r\n    position: fixed;\r\n    top: 0;\r\n    right: -110%;\r\n    width: 35vw;\r\n    height: 100%;\r\n    background: #292929;\r\n    transition: right 0.4s ease-in 0s;\r\n    overflow: auto;\r\n  }\r\n\r\n  .menu__side {\r\n    z-index: 1;\r\n    position: fixed;\r\n    left: -100%;\r\n    top: 0;\r\n    width: calc(100% - 35vw);\r\n    height: 100%;\r\n    background: rgba(41, 41, 41, 0.6);\r\n    transition: left .4s ease-in 0s;\r\n  }\r\n\r\n  .menu__list {\r\n    z-index: 90;\r\n  }\r\n\r\n  .menu__link a {\r\n    line-height: 160%;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    color: #CDCDCD;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .menu__link a:hover {\r\n    color: #FAFAFA;\r\n  }\r\n\r\n  .menu-open {\r\n    right: 0;\r\n  }\r\n\r\n  .menu__side-open {\r\n    left: 0;\r\n  }\r\n\r\n  .locked {\r\n    overflow: hidden;\r\n  }\r\n\r\n  footer {\r\n    height: 16vh;\r\n    grid-template-areas: \r\n    "rss github course"\r\n    "copyright copyright copyright";\r\n    grid-template-columns: 0.5fr 1fr 1fr;\r\n    grid-template-rows: 8vh 8vh;\r\n    font-size: 2.4vw;\r\n  }\r\n  footer .rss {\r\n    padding: 5%;\r\n    max-width: 100%;\r\n    border-radius: 1vw;\r\n  }\r\n  footer .github, footer .course {\r\n    align-self: center;\r\n  }\r\n  footer .copyright, footer span.year  {\r\n    font-size: 1.6vw;\r\n  }\r\n}'],sourceRoot:""}]);const s=A},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var e=r(n);return n[2]?"@media ".concat(n[2]," {").concat(e,"}"):e})).join("")},n.i=function(r,e,t){"string"==typeof r&&(r=[[null,r,""]]);var o={};if(t)for(var i=0;i<this.length;i++){var A=this[i][0];null!=A&&(o[A]=!0)}for(var s=0;s<r.length;s++){var a=[].concat(r[s]);t&&o[a[0]]||(e&&(a[2]?a[2]="".concat(e," and ").concat(a[2]):a[2]=e),n.push(a))}},n}},15:r=>{function n(r,n){(null==n||n>r.length)&&(n=r.length);for(var e=0,t=new Array(n);e<n;e++)t[e]=r[e];return t}r.exports=function(r){var e,t,o=(t=4,function(r){if(Array.isArray(r))return r}(e=r)||function(r,n){var e=r&&("undefined"!=typeof Symbol&&r[Symbol.iterator]||r["@@iterator"]);if(null!=e){var t,o,i=[],A=!0,s=!1;try{for(e=e.call(r);!(A=(t=e.next()).done)&&(i.push(t.value),!n||i.length!==n);A=!0);}catch(r){s=!0,o=r}finally{try{A||null==e.return||e.return()}finally{if(s)throw o}}return i}}(e,t)||function(r,e){if(r){if("string"==typeof r)return n(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?n(r,e):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],A=o[3];if(!A)return i;if("function"==typeof btoa){var s=btoa(unescape(encodeURIComponent(JSON.stringify(A)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(s),c="/*# ".concat(a," */"),d=A.sources.map((function(r){return"/*# sourceURL=".concat(A.sourceRoot||"").concat(r," */")}));return[i].concat(d).concat([c]).join("\n")}return[i].join("\n")}},242:(r,n,e)=>{e.r(n),e.d(n,{default:()=>A});var t=e(379),o=e.n(t),i=e(669);o()(i.Z,{insert:"head",singleton:!1});const A=i.Z.locals||{}},762:(r,n,e)=>{e.r(n),e.d(n,{default:()=>A});var t=e(379),o=e.n(t),i=e(501);o()(i.Z,{insert:"head",singleton:!1});const A=i.Z.locals||{}},427:(r,n,e)=>{e.r(n),e.d(n,{default:()=>A});var t=e(379),o=e.n(t),i=e(767);o()(i.Z,{insert:"head",singleton:!1});const A=i.Z.locals||{}},379:(r,n,e)=>{var t,o=function(){var r={};return function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(r){e=null}r[n]=e}return r[n]}}(),i=[];function A(r){for(var n=-1,e=0;e<i.length;e++)if(i[e].identifier===r){n=e;break}return n}function s(r,n){for(var e={},t=[],o=0;o<r.length;o++){var s=r[o],a=n.base?s[0]+n.base:s[0],c=e[a]||0,d="".concat(a," ").concat(c);e[a]=c+1;var l=A(d),u={css:s[1],media:s[2],sourceMap:s[3]};-1!==l?(i[l].references++,i[l].updater(u)):i.push({identifier:d,updater:g(u,n),references:1}),t.push(d)}return t}function a(r){var n=document.createElement("style"),t=r.attributes||{};if(void 0===t.nonce){var i=e.nc;i&&(t.nonce=i)}if(Object.keys(t).forEach((function(r){n.setAttribute(r,t[r])})),"function"==typeof r.insert)r.insert(n);else{var A=o(r.insert||"head");if(!A)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");A.appendChild(n)}return n}var c,d=(c=[],function(r,n){return c[r]=n,c.filter(Boolean).join("\n")});function l(r,n,e,t){var o=e?"":t.media?"@media ".concat(t.media," {").concat(t.css,"}"):t.css;if(r.styleSheet)r.styleSheet.cssText=d(n,o);else{var i=document.createTextNode(o),A=r.childNodes;A[n]&&r.removeChild(A[n]),A.length?r.insertBefore(i,A[n]):r.appendChild(i)}}function u(r,n,e){var t=e.css,o=e.media,i=e.sourceMap;if(o?r.setAttribute("media",o):r.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleSheet)r.styleSheet.cssText=t;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(t))}}var f=null,h=0;function g(r,n){var e,t,o;if(n.singleton){var i=h++;e=f||(f=a(n)),t=l.bind(null,e,i,!1),o=l.bind(null,e,i,!0)}else e=a(n),t=u.bind(null,e,n),o=function(){!function(r){if(null===r.parentNode)return!1;r.parentNode.removeChild(r)}(e)};return t(r),function(n){if(n){if(n.css===r.css&&n.media===r.media&&n.sourceMap===r.sourceMap)return;t(r=n)}else o()}}r.exports=function(r,n){(n=n||{}).singleton||"boolean"==typeof n.singleton||(n.singleton=(void 0===t&&(t=Boolean(window&&document&&document.all&&!window.atob)),t));var e=s(r=r||[],n);return function(r){if(r=r||[],"[object Array]"===Object.prototype.toString.call(r)){for(var t=0;t<e.length;t++){var o=A(e[t]);i[o].references--}for(var a=s(r,n),c=0;c<e.length;c++){var d=A(e[c]);0===i[d].references&&(i[d].updater(),i.splice(d,1))}e=a}}}},572:(r,n)=>{Object.defineProperty(n,"__esModule",{value:!0});class e{static toggleMenu(){const r=document.getElementById("burger"),n=document.querySelector(".menu"),e=document.querySelector(".menu__side");r&&(document.body.classList.toggle("locked"),e.classList.toggle("menu__side-open"),r.classList.toggle("burger-open"),n.classList.toggle("menu-open"))}addSwitch(){const r=document.querySelector(".menu__side"),n=document.getElementById("burger");r.addEventListener("click",e.toggleMenu),n.addEventListener("click",e.toggleMenu)}}n.default=e},717:function(r,n,e){var t=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(n,"__esModule",{value:!0});const o=t(e(842)),i=t(e(527)),A=t(e(572));n.default=class{constructor(){this.controller=new o.default,this.view=new i.default,this.switch=new A.default}start(){var r;null===(r=document.querySelector(".sources .source__list"))||void 0===r||r.addEventListener("click",(r=>this.controller.getNews(r,(r=>this.view.drawNews(r))))),this.switch.addSwitch(),this.controller.getSources((r=>this.view.drawSources(r)))}}},853:function(r,n,e){var t=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(n,"__esModule",{value:!0});const o=t(e(24));class i extends o.default{constructor(){super("https://nodenews.herokuapp.com/",{apiKey:"caa85f7c9dae4dd8ab7a91d09783bdfa"})}}n.default=i},842:function(r,n,e){var t=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(n,"__esModule",{value:!0});const o=t(e(853)),i=e(86);class A extends o.default{getSources(r){super.getResp({endpoint:i.Endpoints.sources},r)}getNews(r,n){let e=r.target;if(!e)return null;const t=r.currentTarget;for(;e!==t;){if(e.classList.contains("source__item")){const r=e.getAttribute("data-source-id");return void(t.getAttribute("data-source")!==r&&(t.setAttribute("data-source",r),super.getResp({endpoint:i.Endpoints.everything,options:{sources:r}},n)))}e=e.parentNode}}}n.default=A},336:(r,n)=>{var e;Object.defineProperty(n,"__esModule",{value:!0}),n.ApiMethods=void 0,(e=n.ApiMethods||(n.ApiMethods={})).GET="GET",e.POST="POST"},595:(r,n)=>{var e;Object.defineProperty(n,"__esModule",{value:!0}),n.ApiStatus=void 0,(e=n.ApiStatus||(n.ApiStatus={}))[e.unauthorized=401]="unauthorized",e[e.notFound=404]="notFound"},172:(r,n)=>{var e;Object.defineProperty(n,"__esModule",{value:!0}),n.DataStatus=void 0,(e=n.DataStatus||(n.DataStatus={})).ok="ok",e.error="error"},398:(r,n)=>{var e;Object.defineProperty(n,"__esModule",{value:!0}),n.Endpoints=void 0,(e=n.Endpoints||(n.Endpoints={})).sources="sources",e.everything="everything"},86:function(r,n,e){var t=this&&this.__createBinding||(Object.create?function(r,n,e,t){void 0===t&&(t=e);var o=Object.getOwnPropertyDescriptor(n,e);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(r,t,o)}:function(r,n,e,t){void 0===t&&(t=e),r[t]=n[e]}),o=this&&this.__exportStar||function(r,n){for(var e in r)"default"===e||Object.prototype.hasOwnProperty.call(n,e)||t(n,r,e)};Object.defineProperty(n,"__esModule",{value:!0}),o(e(336),n),o(e(172),n),o(e(398),n),o(e(595),n),o(e(18),n),o(e(451),n)},24:function(r,n,e){var t=this&&this.__createBinding||(Object.create?function(r,n,e,t){void 0===t&&(t=e);var o=Object.getOwnPropertyDescriptor(n,e);o&&!("get"in o?!n.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return n[e]}}),Object.defineProperty(r,t,o)}:function(r,n,e,t){void 0===t&&(t=e),r[t]=n[e]}),o=this&&this.__setModuleDefault||(Object.create?function(r,n){Object.defineProperty(r,"default",{enumerable:!0,value:n})}:function(r,n){r.default=n}),i=this&&this.__importStar||function(r){if(r&&r.__esModule)return r;var n={};if(null!=r)for(var e in r)"default"!==e&&Object.prototype.hasOwnProperty.call(r,e)&&t(n,r,e);return o(n,r),n};Object.defineProperty(n,"__esModule",{value:!0});const A=i(e(86));n.default=class{constructor(r,n){this.baseLink=r,this.options=n,this.baseLink=r,this.options=n}getResp({endpoint:r,options:n},e=(r=>{console.error("No callback for GET response")})){this.load(A.ApiMethods.GET,r,e,n)}errorHandler(r){if(!r.ok)throw r.status!==A.ApiStatus.unauthorized&&r.status!==A.ApiStatus.notFound||console.log(`Sorry, but there is ${r.status} error: ${r.statusText}`),Error(r.statusText);return r}makeUrl(r={},n){const e=Object.assign(Object.assign({},this.options),r);let t=`${this.baseLink}${n}?`;return Object.keys(e).forEach((r=>{t+=`${r}=${e[r]}&`})),t.slice(0,-1)}load(r,n,e,t={}){fetch(this.makeUrl(t,n),{method:r}).then(this.errorHandler).then((r=>r.json())).then((r=>e(r))).catch((r=>console.error(r)))}}},18:(r,n)=>{Object.defineProperty(n,"__esModule",{value:!0})},451:(r,n)=>{Object.defineProperty(n,"__esModule",{value:!0})},527:function(r,n,e){var t=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(n,"__esModule",{value:!0});const o=t(e(798)),i=t(e(53));n.default=class{constructor(){this.news=new o.default,this.sources=new i.default}drawNews(r){var n;const e=null!==(n=null==r?void 0:r.articles)&&void 0!==n?n:[];this.news.draw(e)}drawSources(r){var n;const e=null!==(n=null==r?void 0:r.sources)&&void 0!==n?n:[];this.sources.draw(e)}}},798:(r,n,e)=>{Object.defineProperty(n,"__esModule",{value:!0}),e(242),n.default=class{constructor(){this.articlesAmount=10,this.newsPlaceholder="img/news_placeholder.jpg",this.altDelimiter=2}draw(r){var n;const e=r.length>=this.articlesAmount?r.filter(((r,n)=>n<this.articlesAmount)):r,t=document.createDocumentFragment(),o=document.querySelector("#newsItemTemp");e.forEach(((r,n)=>{var e,i;const A=o.content.cloneNode(!0);n%this.altDelimiter&&(null===(e=A.querySelector(".news__item"))||void 0===e||e.classList.add("alt")),A.querySelector(".news__meta-photo").style.backgroundImage=`url(${r.urlToImage||this.newsPlaceholder})`,A.querySelector(".news__meta-author").textContent=r.author||r.source.name,A.querySelector(".news__meta-date").textContent=r.publishedAt.slice(0,10).split("-").reverse().join("-"),A.querySelector(".news__description-title").textContent=r.title,A.querySelector(".news__description-source").textContent=r.source.name,A.querySelector(".news__description-content").textContent=r.description,null===(i=A.querySelector(".news__read-more a"))||void 0===i||i.setAttribute("href",r.url),t.append(A)})),document.querySelector(".news").innerHTML="",null===(n=document.querySelector(".news"))||void 0===n||n.appendChild(t)}}},53:(r,n,e)=>{Object.defineProperty(n,"__esModule",{value:!0}),e(762),n.default=class{draw(r){var n;const e=document.createDocumentFragment(),t=document.querySelector("#sourceItemTemp");r.forEach((r=>{var n;const o=t.content.cloneNode(!0);o.querySelector(".source__item-name").textContent=r.name,null===(n=o.querySelector(".source__item"))||void 0===n||n.setAttribute("data-source-id",r.id),e.append(o)})),null===(n=document.querySelector(".sources .source__list"))||void 0===n||n.append(e)}}},607:function(r,n,e){var t=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{default:r}};Object.defineProperty(n,"__esModule",{value:!0});const o=t(e(717));e(427),(new o.default).start()}},n={};function e(t){var o=n[t];if(void 0!==o)return o.exports;var i=n[t]={id:t,exports:{}};return r[t].call(i.exports,i,i.exports,e),i.exports}e.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return e.d(n,{a:n}),n},e.d=(r,n)=>{for(var t in n)e.o(n,t)&&!e.o(r,t)&&Object.defineProperty(r,t,{enumerable:!0,get:n[t]})},e.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n),e.r=r=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})},e(607)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,